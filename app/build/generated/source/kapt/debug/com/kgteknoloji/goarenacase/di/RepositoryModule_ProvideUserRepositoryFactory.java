// Generated by Dagger (https://google.github.io/dagger).
package com.kgteknoloji.goarenacase.di;

import android.content.SharedPreferences;
import com.kgteknoloji.goarenacase.data.api.Api;
import com.kgteknoloji.goarenacase.data.repository.UserRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class RepositoryModule_ProvideUserRepositoryFactory
    implements Factory<UserRepository> {
  private final RepositoryModule module;

  private final Provider<Api> apiProvider;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public RepositoryModule_ProvideUserRepositoryFactory(
      RepositoryModule module,
      Provider<Api> apiProvider,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    this.module = module;
    this.apiProvider = apiProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public UserRepository get() {
    return provideInstance(module, apiProvider, sharedPreferencesProvider);
  }

  public static UserRepository provideInstance(
      RepositoryModule module,
      Provider<Api> apiProvider,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    return proxyProvideUserRepository(module, apiProvider.get(), sharedPreferencesProvider.get());
  }

  public static RepositoryModule_ProvideUserRepositoryFactory create(
      RepositoryModule module,
      Provider<Api> apiProvider,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    return new RepositoryModule_ProvideUserRepositoryFactory(
        module, apiProvider, sharedPreferencesProvider);
  }

  public static UserRepository proxyProvideUserRepository(
      RepositoryModule instance, Api api, SharedPreferences sharedPreferences) {
    return Preconditions.checkNotNull(
        instance.provideUserRepository(api, sharedPreferences),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}

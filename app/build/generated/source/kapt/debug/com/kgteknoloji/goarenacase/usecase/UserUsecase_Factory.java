// Generated by Dagger (https://google.github.io/dagger).
package com.kgteknoloji.goarenacase.usecase;

import com.kgteknoloji.goarenacase.data.repository.UserRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class UserUsecase_Factory implements Factory<UserUsecase> {
  private final Provider<UserRepository> userRepositoryProvider;

  public UserUsecase_Factory(Provider<UserRepository> userRepositoryProvider) {
    this.userRepositoryProvider = userRepositoryProvider;
  }

  @Override
  public UserUsecase get() {
    return provideInstance(userRepositoryProvider);
  }

  public static UserUsecase provideInstance(Provider<UserRepository> userRepositoryProvider) {
    return new UserUsecase(userRepositoryProvider.get());
  }

  public static UserUsecase_Factory create(Provider<UserRepository> userRepositoryProvider) {
    return new UserUsecase_Factory(userRepositoryProvider);
  }

  public static UserUsecase newUserUsecase(UserRepository userRepository) {
    return new UserUsecase(userRepository);
  }
}

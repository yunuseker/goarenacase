// Generated by Dagger (https://google.github.io/dagger).
package com.kgteknoloji.goarenacase.di;

import android.content.Context;
import android.content.SharedPreferences;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DatabaseModule_ProvidesSharedPreferencesFactory
    implements Factory<SharedPreferences> {
  private final DatabaseModule module;

  private final Provider<Context> contextProvider;

  public DatabaseModule_ProvidesSharedPreferencesFactory(
      DatabaseModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public SharedPreferences get() {
    return provideInstance(module, contextProvider);
  }

  public static SharedPreferences provideInstance(
      DatabaseModule module, Provider<Context> contextProvider) {
    return proxyProvidesSharedPreferences(module, contextProvider.get());
  }

  public static DatabaseModule_ProvidesSharedPreferencesFactory create(
      DatabaseModule module, Provider<Context> contextProvider) {
    return new DatabaseModule_ProvidesSharedPreferencesFactory(module, contextProvider);
  }

  public static SharedPreferences proxyProvidesSharedPreferences(
      DatabaseModule instance, Context context) {
    return Preconditions.checkNotNull(
        instance.providesSharedPreferences(context),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}

// Generated by Dagger (https://google.github.io/dagger).
package com.kgteknoloji.goarenacase.di;

import com.kgteknoloji.goarenacase.util.DateFormatter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class FormatterModule_ProvideDateFormatterFactory implements Factory<DateFormatter> {
  private final FormatterModule module;

  public FormatterModule_ProvideDateFormatterFactory(FormatterModule module) {
    this.module = module;
  }

  @Override
  public DateFormatter get() {
    return provideInstance(module);
  }

  public static DateFormatter provideInstance(FormatterModule module) {
    return proxyProvideDateFormatter(module);
  }

  public static FormatterModule_ProvideDateFormatterFactory create(FormatterModule module) {
    return new FormatterModule_ProvideDateFormatterFactory(module);
  }

  public static DateFormatter proxyProvideDateFormatter(FormatterModule instance) {
    return Preconditions.checkNotNull(
        instance.provideDateFormatter(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}

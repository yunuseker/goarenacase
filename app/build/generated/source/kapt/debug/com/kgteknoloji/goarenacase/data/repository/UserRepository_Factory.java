// Generated by Dagger (https://google.github.io/dagger).
package com.kgteknoloji.goarenacase.data.repository;

import android.content.SharedPreferences;
import com.kgteknoloji.goarenacase.data.api.Api;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class UserRepository_Factory implements Factory<UserRepository> {
  private final Provider<Api> apiProvider;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public UserRepository_Factory(
      Provider<Api> apiProvider, Provider<SharedPreferences> sharedPreferencesProvider) {
    this.apiProvider = apiProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public UserRepository get() {
    return provideInstance(apiProvider, sharedPreferencesProvider);
  }

  public static UserRepository provideInstance(
      Provider<Api> apiProvider, Provider<SharedPreferences> sharedPreferencesProvider) {
    return new UserRepository(apiProvider.get(), sharedPreferencesProvider.get());
  }

  public static UserRepository_Factory create(
      Provider<Api> apiProvider, Provider<SharedPreferences> sharedPreferencesProvider) {
    return new UserRepository_Factory(apiProvider, sharedPreferencesProvider);
  }

  public static UserRepository newUserRepository(Api api, SharedPreferences sharedPreferences) {
    return new UserRepository(api, sharedPreferences);
  }
}

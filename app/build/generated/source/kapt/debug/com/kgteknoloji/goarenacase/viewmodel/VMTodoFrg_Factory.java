// Generated by Dagger (https://google.github.io/dagger).
package com.kgteknoloji.goarenacase.viewmodel;

import com.kgteknoloji.goarenacase.usecase.TodoUsecase;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class VMTodoFrg_Factory implements Factory<VMTodoFrg> {
  private final Provider<TodoUsecase> todoUsecaseProvider;

  public VMTodoFrg_Factory(Provider<TodoUsecase> todoUsecaseProvider) {
    this.todoUsecaseProvider = todoUsecaseProvider;
  }

  @Override
  public VMTodoFrg get() {
    return provideInstance(todoUsecaseProvider);
  }

  public static VMTodoFrg provideInstance(Provider<TodoUsecase> todoUsecaseProvider) {
    return new VMTodoFrg(todoUsecaseProvider.get());
  }

  public static VMTodoFrg_Factory create(Provider<TodoUsecase> todoUsecaseProvider) {
    return new VMTodoFrg_Factory(todoUsecaseProvider);
  }

  public static VMTodoFrg newVMTodoFrg(TodoUsecase todoUsecase) {
    return new VMTodoFrg(todoUsecase);
  }
}

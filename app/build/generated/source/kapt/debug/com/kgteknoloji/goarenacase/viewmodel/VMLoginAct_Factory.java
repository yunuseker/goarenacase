// Generated by Dagger (https://google.github.io/dagger).
package com.kgteknoloji.goarenacase.viewmodel;

import com.kgteknoloji.goarenacase.usecase.UserUsecase;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class VMLoginAct_Factory implements Factory<VMLoginAct> {
  private final Provider<UserUsecase> userUsecaseProvider;

  public VMLoginAct_Factory(Provider<UserUsecase> userUsecaseProvider) {
    this.userUsecaseProvider = userUsecaseProvider;
  }

  @Override
  public VMLoginAct get() {
    return provideInstance(userUsecaseProvider);
  }

  public static VMLoginAct provideInstance(Provider<UserUsecase> userUsecaseProvider) {
    return new VMLoginAct(userUsecaseProvider.get());
  }

  public static VMLoginAct_Factory create(Provider<UserUsecase> userUsecaseProvider) {
    return new VMLoginAct_Factory(userUsecaseProvider);
  }

  public static VMLoginAct newVMLoginAct(UserUsecase userUsecase) {
    return new VMLoginAct(userUsecase);
  }
}

// Generated by Dagger (https://google.github.io/dagger).
package com.kgteknoloji.goarenacase.viewmodel;

import com.kgteknoloji.goarenacase.usecase.LoginUseCase;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class VMLoginAct_Factory implements Factory<VMLoginAct> {
  private final Provider<LoginUseCase> loginUseCaseProvider;

  public VMLoginAct_Factory(Provider<LoginUseCase> loginUseCaseProvider) {
    this.loginUseCaseProvider = loginUseCaseProvider;
  }

  @Override
  public VMLoginAct get() {
    return provideInstance(loginUseCaseProvider);
  }

  public static VMLoginAct provideInstance(Provider<LoginUseCase> loginUseCaseProvider) {
    return new VMLoginAct(loginUseCaseProvider.get());
  }

  public static VMLoginAct_Factory create(Provider<LoginUseCase> loginUseCaseProvider) {
    return new VMLoginAct_Factory(loginUseCaseProvider);
  }

  public static VMLoginAct newVMLoginAct(LoginUseCase loginUseCase) {
    return new VMLoginAct(loginUseCase);
  }
}

// Generated by Dagger (https://google.github.io/dagger).
package com.kgteknoloji.goarenacase.base;

import android.arch.lifecycle.ViewModelProvider;
import android.databinding.ViewDataBinding;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class BaseFragment_MembersInjector<
        DB extends ViewDataBinding, VM extends BaseViewModel>
    implements MembersInjector<BaseFragment<DB, VM>> {
  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  public BaseFragment_MembersInjector(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  public static <DB extends ViewDataBinding, VM extends BaseViewModel>
      MembersInjector<BaseFragment<DB, VM>> create(
          Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    return new BaseFragment_MembersInjector<DB, VM>(viewModelFactoryProvider);
  }

  @Override
  public void injectMembers(BaseFragment<DB, VM> instance) {
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
  }

  public static <DB extends ViewDataBinding, VM extends BaseViewModel> void injectViewModelFactory(
      BaseFragment<DB, VM> instance, ViewModelProvider.Factory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}

// Generated by Dagger (https://google.github.io/dagger).
package com.kgteknoloji.goarenacase.viewmodel;

import com.kgteknoloji.goarenacase.usecase.UserUsecase;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class VMProfileFrg_Factory implements Factory<VMProfileFrg> {
  private final Provider<UserUsecase> userUsecaseProvider;

  public VMProfileFrg_Factory(Provider<UserUsecase> userUsecaseProvider) {
    this.userUsecaseProvider = userUsecaseProvider;
  }

  @Override
  public VMProfileFrg get() {
    return provideInstance(userUsecaseProvider);
  }

  public static VMProfileFrg provideInstance(Provider<UserUsecase> userUsecaseProvider) {
    return new VMProfileFrg(userUsecaseProvider.get());
  }

  public static VMProfileFrg_Factory create(Provider<UserUsecase> userUsecaseProvider) {
    return new VMProfileFrg_Factory(userUsecaseProvider);
  }

  public static VMProfileFrg newVMProfileFrg(UserUsecase userUsecase) {
    return new VMProfileFrg(userUsecase);
  }
}

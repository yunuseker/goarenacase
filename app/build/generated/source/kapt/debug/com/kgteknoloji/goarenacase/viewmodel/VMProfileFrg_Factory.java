// Generated by Dagger (https://google.github.io/dagger).
package com.kgteknoloji.goarenacase.viewmodel;

import com.kgteknoloji.goarenacase.usecase.GetProfileUseCase;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class VMProfileFrg_Factory implements Factory<VMProfileFrg> {
  private final Provider<GetProfileUseCase> getProfileUseCaseProvider;

  public VMProfileFrg_Factory(Provider<GetProfileUseCase> getProfileUseCaseProvider) {
    this.getProfileUseCaseProvider = getProfileUseCaseProvider;
  }

  @Override
  public VMProfileFrg get() {
    return provideInstance(getProfileUseCaseProvider);
  }

  public static VMProfileFrg provideInstance(
      Provider<GetProfileUseCase> getProfileUseCaseProvider) {
    return new VMProfileFrg(getProfileUseCaseProvider.get());
  }

  public static VMProfileFrg_Factory create(Provider<GetProfileUseCase> getProfileUseCaseProvider) {
    return new VMProfileFrg_Factory(getProfileUseCaseProvider);
  }

  public static VMProfileFrg newVMProfileFrg(GetProfileUseCase getProfileUseCase) {
    return new VMProfileFrg(getProfileUseCase);
  }
}

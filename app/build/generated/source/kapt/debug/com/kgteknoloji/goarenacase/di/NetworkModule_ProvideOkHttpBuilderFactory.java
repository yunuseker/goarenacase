// Generated by Dagger (https://google.github.io/dagger).
package com.kgteknoloji.goarenacase.di;

import android.content.SharedPreferences;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

public final class NetworkModule_ProvideOkHttpBuilderFactory implements Factory<OkHttpClient> {
  private final NetworkModule module;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public NetworkModule_ProvideOkHttpBuilderFactory(
      NetworkModule module, Provider<SharedPreferences> sharedPreferencesProvider) {
    this.module = module;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public OkHttpClient get() {
    return provideInstance(module, sharedPreferencesProvider);
  }

  public static OkHttpClient provideInstance(
      NetworkModule module, Provider<SharedPreferences> sharedPreferencesProvider) {
    return proxyProvideOkHttpBuilder(module, sharedPreferencesProvider.get());
  }

  public static NetworkModule_ProvideOkHttpBuilderFactory create(
      NetworkModule module, Provider<SharedPreferences> sharedPreferencesProvider) {
    return new NetworkModule_ProvideOkHttpBuilderFactory(module, sharedPreferencesProvider);
  }

  public static OkHttpClient proxyProvideOkHttpBuilder(
      NetworkModule instance, SharedPreferences sharedPreferences) {
    return Preconditions.checkNotNull(
        instance.provideOkHttpBuilder(sharedPreferences),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
